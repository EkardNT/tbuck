# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# DONE Rust builds on stable by default, this can be
# overridden on a case by case basis down below.
rust: stable

env:
  global:
    - CRATE_NAME=tbuck

matrix:
  allow_failures:
    - rust: nightly
  # DONE These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # DONE update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: neCX7DPD57dzaNhBjh/u2ePvmNaldPpBmQLK+lD45hRFTiLPF722V1y40Gg5fG1nROxAr/vLtWLjMS9Sm2iL138zn59q7EiilqOI3ItFhfehpR52fFdx7VFtVEL0on+hHrMxSCMi/kvF5IswskwIZNOgc3YzVF8a0s0fq9bTcbwWY17tM+KK/CyMBoASPhT1eofcNQOx2xOI+GVCay1AvLMFzNPCAqyV/TMoqqXJYWsRtrVn2CqqRW0V4g/E1duPW2vsa4+AGwniK8Y4bthwpsW05M5hXYpYax5AyIaClG9Vb1m7HwVu2Oi+N1xoHoXp6nshmsgIOcXnN4411CG57o2kXmtq/hwoWu+ojIlXbanfAB47rpEFrmkGfK+LSxTGKXsiZkS0p5IIfn/d8SBZfe3XgM3UlCAUF/GZowPoMbuJecMKwig4vrNv11BwQwAIFLBvnBKscMkn9PJNGms8m4kRhfobLBqKKwhjhvzhrtgwo8gJv0Ol+1zqv87m1dzi9CK+jw0Bvq2bScOOPq+DzRVlfR2speeNXxu/qN0dv2p0w+K6q85x6gJ3UEELvXD7qLjUwVBbGSCe0T2J/qGNP1uMnJ7qskc0PLiZVfMeenuoG6UsB4/6OSySQRoxg3+QCdHA+M0nBXvsUKsneXRzfZxLWvkcwIUkAmFXyf8gUjY=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # DONE Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
